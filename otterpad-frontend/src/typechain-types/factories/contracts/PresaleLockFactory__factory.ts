/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PresaleLockFactory,
  PresaleLockFactoryInterface,
} from "../../contracts/PresaleLockFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lockIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "foundersWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LockCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "address",
        name: "foundersWallet",
        type: "address",
      },
    ],
    name: "createPresaleLock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockCounterIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a5760008055611b1a90816100208239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263a1610fe71461009c57508163f4dadc6114610065575063fe7e02b01461004657600080fd5b34610061578160031936011261006157602091549051908152f35b5080fd5b9050346100985760203660031901126100985735825260016020908152918190205490516001600160a01b039091168152f35b8280fd5b8484833461009857816003193601126100985780359367ffffffffffffffff918286116102c457366023870112156102c457602494818701358481116102b257601f19603f81601f84011601168401848110868211176102a05786528084526020973688838301011161009857818392898b930183880137850101526001600160a01b0393863585811693919084900361009857831561025e5784511561022e578651906117dc8083019182118383101761021c579082916103098339888152858b61016a8b84018a6102c8565b920152039083f094851561021257825495169685835260018952868320886bffffffffffffffffffffffff60a01b8254161790558254916000198314610201575050927f54940c5a78a53a08acdaaea42f1242052c19ec671b7cdfb929aa2bdbcf2d0be6926101ee92600189979601905586519283926060845260608401906102c8565b908983015242878301520390a351908152f35b634e487b7160e01b84526011905282fd5b86513d84823e3d90fd5b634e487b7160e01b8552604184528985fd5b865162461bcd60e51b81528083018a9052600b818a01526a456d707479207469746c6560a81b6044820152606490fd5b865162461bcd60e51b81528083018a90526017818a01527f496e76616c696420666f756e646572732077616c6c65740000000000000000006044820152606490fd5b634e487b7160e01b8352604184528783fd5b5060418692634e487b7160e01b835252fd5b8480fd5b919082519283825260005b8481106102f4575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016102d356fe6080604052346200024257620017dc803803806200001d816200025c565b928339810190604081830312620002425780516001600160401b0391908281116200024257810190601f9284848401121562000242578251918183116200022c57602092601f199462000076858789850116016200025c565b9782895285838301011162000242579084929160005b82811062000247575050600090880183015201516001600160a01b038116949085900362000242576001928360005560018060a01b03199485600354166003558560045416600455600060055587519384116200022c5784548581811c9116801562000221575b838210146200020b57838111620001c0575b50819284116001146200015a57505081929394956000926200014e575b5050600019600383901b1c191690821b1790555b60025416176002556040516115599081620002838239f35b01519050388062000122565b6000858152828120918516989193925b898210620001a85750508385969798106200018e575b505050811b01905562000136565b015160001960f88460031b161c1916905538808062000180565b8087859682949686015181550195019301906200016a565b85600052826000208480870160051c82019285881062000201575b0160051c019086905b828110620001f457505062000105565b60008155018690620001e4565b92508192620001db565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000f3565b634e487b7160e01b600052604160045260246000fd5b600080fd5b8181018501518a82018601528694016200008c565b6040519190601f01601f191682016001600160401b038111838210176200022c5760405256fe608060408181526004908136101561001657600080fd5b600092833560e01c9081631bfaf15514611273575080634a79d50c1461112d57806361b3619c14610fc757806372fada5c14610de7578063757bf88114610dbe57806386e807f814610a075780639c51e742146109e85780639d3ebce11461072b578063b02c43d0146106b5578063bb0c8a571461064a578063c716389a146105b5578063d4e4487d1461052f578063d6236628146104e7578063db006a751461027a578063e985e36714610252578063ecb3dc8814610233578063edafc9af14610204578063ef5ee995146101e2578063f114fccd146101995763f6a55a291461010057600080fd5b34610183578260031936011261018357815481516370a0823160e01b81523093810193909352602090839060249082906001600160a01b03165afa91821561018f578392610153575b6020838351908152f35b9091506020813d602011610187575b8161016f60209383611298565b810103126101835760209250519038610149565b8280fd5b3d9150610162565b81513d85823e3d90fd5b5082346101df57816003193601126101df576024359235815260086020528181209081548410156101df57506020926101d191611327565b91905490519160031b1c8152f35b80fd5b83823461020057816003193601126102005760209051621e84808152f35b5080fd5b8382346102005781600319360112610200576020905173c6f778fb08f40c0305c3c056c42406614492de448152f35b8382346102005781600319360112610200576020906005549051908152f35b5090346101835782600319360112610183575490516001600160a01b03909116815260209150f35b5082903461020057602090816003193601126101835783359061029b611500565b6003546001600160a01b0390811693906102b6851515611355565b6102c48188541615156113a1565b8386526006825282862081815416956102de8715156113e6565b888201908154906102f260ff83161561142b565b60ff8260081c166104ad57858b918851928380926325f97fb960e01b82525afa9081156104a3578a91610486575b5015610443576002830154421061040a5760ff1916600190811790915588549082018054865163a9059cbb60e01b81526001600160a01b039099169a89019a8b5260208b01529798969796849189919085169082908c90829060400103925af1968715610400577f9be2913c7ac12b0d2d4041911c03efac5ff95189de9c1c5903ce675ae165a00f9596976103bc918a916103d3575b50611482565b541694549082519182524290820152a36001815580f35b6103f39150853d87116103f9575b6103eb8183611298565b81019061146a565b8a6103b6565b503d6103e1565b84513d8a823e3d90fd5b855162461bcd60e51b8152808b018690526013602482015272151bdad95b9cc81cdd1a5b1b081b1bd8dad959606a1b6044820152606490fd5b855162461bcd60e51b8152808b01869052601a60248201527f4f747465725061642073616c65206e6f7420636f6d706c6574650000000000006044820152606490fd5b61049d9150863d88116103f9576103eb8183611298565b8b610320565b87513d8c823e3d90fd5b865162461bcd60e51b8152808c01879052601460248201527311195c1bdcda5d081dd85cc818d85b98d95b195960621b6044820152606490fd5b8382346102005780600319360112610200576105016112d0565b6001600160a01b031682526007602052808220805460243593908410156101df57506020926101d191611327565b838234610200576020906020600319360112610183576001600160a01b036105556112d0565b168352600760205280832092815180936020865492838152019583526020832092905b82821061059e5761059a8686610590828b0383611298565b51918291826112eb565b0390f35b835487529586019560019384019390910190610578565b50829034610200576020928360031936011261018357836001600160a01b036105dc6112d0565b169160248451809481936370a0823160e01b835230908301525afa92831561063f57809361060d575b505051908152f35b909192508382813d8311610638575b6106268183611298565b810103126101df575051908380610605565b503d61061c565b8251903d90823e3d90fd5b50346101835760209160206003193601126106b157358352600860205280832092815180936020865492838152019583526020832092905b82821061069a5761059a8686610590828b0383611298565b835487529586019560019384019390910190610682565b8380fd5b50346101835760203660031901126101835760ff8160e0948435815260066020522060018060a01b03815416936001820154936002830154906005600385015493850154940154958151978852602088015286015260608501528181161515608085015260081c16151560a083015260c0820152f35b503461018357602091826003193601126106b1576107476112d0565b91610750611500565b81546001600160a01b03938416939290831684146109a75781516370a0823160e01b815230828201529260249186858481895afa948515610400578895610974575b50621e8480808602908682041486151715610962576305f5e10090049283860395861161095157845163a9059cbb60e01b80825273c6f778fb08f40c0305c3c056c42406614492de44848301528282018690529089816044818e8d5af1908115610947578b9161092a575b50156108f257600254865191825284166001600160a01b03168382019081526020810188905289908290819060400103818d8c5af19081156108e8578a916108cb575b5015610889575050917ff5c6987155a63d396ea16edeb148cb03cb7882ce3a4a54e0ab46b1706f0dee1d9391606093600254169682519384528301524290820152a36001815580f35b845162461bcd60e51b81529182018890526018908201527f466f756e64657273207472616e73666572206661696c656400000000000000006044820152606490fd5b6108e29150893d8b116103f9576103eb8183611298565b38610840565b86513d8c823e3d90fd5b855162461bcd60e51b81528084018a905260138184015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b61094191508a3d8c116103f9576103eb8183611298565b386107fd565b87513d8d823e3d90fd5b634e487b7160e01b89526011825288fd5b634e487b7160e01b8952601182528389fd5b9094508681813d83116109a0575b61098c8183611298565b8101031261099c57519338610792565b8780fd5b503d610982565b84606492519162461bcd60e51b8352820152601960248201527f43616e6e6f74207265636f7665722073616c6520746f6b656e000000000000006044820152fd5b838234610200578160031936011261020057602090516305f5e1008152f35b50903461018357608036600319011261018357803560249182359360018060a01b0393848616809603610dba576044928335916064803595610a47611500565b610a5689600354161515611355565b88845416610a658115156113a1565b8815610d7a578a15610d3a5789600254163303610cea5790610aba94939291898d89519283809263095ea7b360e01b82528160209b8c96308d840160209093929193604081019460018060a01b031681520152565b03925af1908115610ce0578d91610cc3575b5015610c9357888c9286928c875416948a5195869485936323b872dd60e01b8552338b860152308a8601528401525af1908115610c895790610b14918c91610c6c5750611482565b6005549785519060e0820182811067ffffffffffffffff821117610c5a578a83878f8f6005968f918f97938f918f9583528752858701938452818701948552600660608801968988526080890199838b5260c060a08b019a858c52019b8c52835252209851166bffffffffffffffffffffffff60a01b895416178855516001880155516002870155516003860155868501915115159060ff61ff0084549251151560081b1692169061ffff19161717905551910155888a5260078352610bdc88868c206114c6565b858a5260088352610bef88868c206114c6565b600554916000198314610c495750506001016005558251948552840152439083015242606083015260808201527f06d492c240f3be186afa8631aaf320059cfe80eee8af518d0b16c0f6a61d780e9060a090a36001815580f35b634e487b7160e01b8b526011905289fd5b634e487b7160e01b8d5260418552838dfd5b610c839150853d87116103f9576103eb8183611298565b386103b6565b86513d8d823e3d90fd5b90936e105c1c1c9bdd985b0819985a5b1959608a1b92600f9188519562461bcd60e51b8752860152840152820152fd5b610cda9150863d88116103f9576103eb8183611298565b38610acc565b88513d8f823e3d90fd5b865162461bcd60e51b81526020818701526027818601527f4f6e6c7920666f756e646572732063616e206465706f73697420696e746f207481840152666865206c6f636b60c81b81850152608490fd5b5060197f496e76616c696420726563697069656e74206164647265737300000000000000929493602088519562461bcd60e51b8752860152840152820152fd5b50601d7f416d6f756e74206d7573742062652067726561746572207468616e2030000000929493602088519562461bcd60e51b8752860152840152820152fd5b8680fd5b83823461020057816003193601126102005760035490516001600160a01b039091168152602090f35b50829034610200576020908160031936011261018357833590610e08611500565b6002546001600160a01b03939084163303610f7b57610e2c84600354161515611355565b610e3a8487541615156113a1565b8285526006815281852093610e538186541615156113e6565b60018501948554978815610f3f578082018054610e7360ff82161561142b565b60ff8160081c16610f095761ff0019166101001790558054600254865163a9059cbb60e01b81526001600160a01b0391861691909116928101928352602083019a909a529798978491899185169082908c90829060400103925af1968715610400577fc3e2ecbba8f4e462386bf91dd665a016f61bac7acf279a743586b585c248893b9596976103bc918a916103d35750611482565b865162461bcd60e51b8152808401879052601060248201526f105b1c9958591e4818d85b98d95b195960821b6044820152606490fd5b845162461bcd60e51b81529081018490526016602482015275125b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b6044820152606490fd5b8590608492519162461bcd60e51b8352820152602160248201527f4f6e6c7920666f756e646572732063616e2063616e63656c206465706f7369746044820152607360f81b6064820152fd5b503461018357602090816003193601126106b157610fe36112d0565b90610fec611500565b6001600160a01b039182169283156110eb578260025416330361109d578085916bffffffffffffffffffffffff60a01b958087600354161760035584519384809263e985e36760e01b82525afa92831561109457508692611059575b505016908254161790556001815580f35b90809250813d831161108d575b6110708183611298565b8101031261108957518181168103611089573880611048565b8480fd5b503d611066565b513d88823e3d90fd5b8490608492519162461bcd60e51b8352820152602360248201527f4f6e6c7920666f756e646572732063616e20736574204f7474657250616420666044820152621d5b9960ea1b6064820152fd5b8490606492519162461bcd60e51b8352820152601d60248201527f496e76616c6964204f747465725061642066756e6420616464726573730000006044820152fd5b5082346101df57806003193601126101df578151908060018054908160011c91600181168015611269575b6020988985108214611256575091839189959388958652908160001461123557506001146111d9575b50506111939250959392950382611298565b82519382859384528251928382860152825b8481106111c357505050828201840152601f01601f19168101030190f35b81810183015188820188015287955082016111a5565b600186527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69492508591905b81831061121d57508894505082010161119388611181565b85548884018501529485019487945091830191611205565b91505061119394925060ff191682840152151560051b820101869288611181565b634e487b7160e01b875260229052602486fd5b92607f1692611158565b8490346102005781600319360112610200576002546001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff8211176112ba57604052565b634e487b7160e01b600052604160045260246000fd5b600435906001600160a01b03821682036112e657565b600080fd5b602090602060408183019282815285518094520193019160005b828110611313575050505090565b835185529381019392810192600101611305565b805482101561133f5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561135c57565b60405162461bcd60e51b815260206004820152601960248201527f4f747465725061642066756e64206e6f742073657420796574000000000000006044820152606490fd5b156113a857565b60405162461bcd60e51b815260206004820152601660248201527514d85b19481d1bdad95b881b9bdd081cd95d081e595d60521b6044820152606490fd5b156113ed57565b60405162461bcd60e51b815260206004820152601660248201527511195c1bdcda5d08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b1561143257565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995919595b595960821b6044820152606490fd5b908160209103126112e6575180151581036112e65790565b1561148957565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b8054680100000000000000008110156112ba576114e891600182018155611327565b819291549060031b91821b91600019901b1916179055565b600260005414611511576002600055565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220dc524a687c1e7969bbc3517f9083a5a5398dc0458bc42ac6b0cb2ac9b9022b3164736f6c63430008180033a264697066735822122014cc32149d9e1ec16fc58c8f17290136597b06eeba8e50fc6269deb5044a2e9264736f6c63430008180033";

type PresaleLockFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PresaleLockFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PresaleLockFactory__factory extends ContractFactory {
  constructor(...args: PresaleLockFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PresaleLockFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PresaleLockFactory__factory {
    return super.connect(runner) as PresaleLockFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleLockFactoryInterface {
    return new Interface(_abi) as PresaleLockFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PresaleLockFactory {
    return new Contract(address, _abi, runner) as unknown as PresaleLockFactory;
  }
}
