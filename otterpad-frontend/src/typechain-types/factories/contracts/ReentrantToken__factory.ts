/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ReentrantToken,
  ReentrantTokenInterface,
} from "../../contracts/ReentrantToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fundraiser",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundraiser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034620003e457601f906001600160401b03601f1962000c4e388190038581018316850184811186821017620002e857859282916040528339602094859181010312620003e45751916001600160a01b0383168303620003e45762000064620003e9565b94600e86526d2932b2b73a3930b73a2a37b5b2b760911b8587015262000089620003e9565b956005875264149151539560da1b86880152805191838311620002e85760039283546001938482811c92168015620003d9575b8a831014620003c35781848493116200036d575b5089908483116001146200030a57600092620002fe575b505060001982861b1c191690831b1783555b8751938411620002e85760049788548381811c91168015620002dd575b89821014620002c8578281116200027d575b508791851160011462000214578495509084929160009562000208575b50501b92600019911b1c19161783555b6080523315620001f05760025469d3c21bcecceda100000092838201809211620001db57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91600255338352828152604083208481540190556040519384523393a360405161084490816200040a823960805181818161022801526102df0152f35b601190634e487b7160e01b6000525260246000fd5b60405163ec442f0560e01b8152600081840152602490fd5b01519350388062000145565b9291948416928860005284886000209460005b8a898383106200026557505050106200024a575b50505050811b01835562000155565b01519060f884600019921b161c19169055388080806200023b565b86860151895590970196948501948893500162000227565b89600052886000208380880160051c8201928b8910620002be575b0160051c019084905b828110620002b157505062000128565b60008155018490620002a1565b9250819262000298565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000116565b634e487b7160e01b600052604160045260246000fd5b015190503880620000e7565b908886941691876000528b6000209260005b8d8282106200035657505084116200033d575b505050811b018355620000f9565b015160001983881b60f8161c191690553880806200032f565b83850151865589979095019493840193016200031c565b90915085600052896000208480850160051c8201928c8610620003b9575b918791869594930160051c01915b828110620003a9575050620000d0565b6000815585945087910162000399565b925081926200038b565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000bc565b600080fd5b60408051919082016001600160401b03811183821017620002e85760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461058957508163095ea7b3146104db57816318160ddd146104bc57816323b872dd146102aa578163313ce5671461028e57816370a082311461025757816389585d101461021357816395d89b411461010e57508063a9059cbb146100de5763dd62ed3e1461009357600080fd5b346100da57806003193601126100da57806020926100af6106c7565b6100b76106e2565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100da57806003193601126100da576020906101076100fd6106c7565b6024359033610730565b5160018152f35b8383346100da57816003193601126100da5780519180938054916001908360011c9260018516948515610209575b60209586861081146101f6578589529081156101d2575060011461017a575b610176878761016c828c03836106f8565b519182918261067e565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106101bf57505050826101769461016c9282010194868061015b565b80548685018801529286019281016101a1565b60ff19168887015250505050151560051b830101925061016c82610176868061015b565b634e487b7160e01b845260228352602484fd5b93607f169361013c565b5050346100da57816003193601126100da57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346100da5760203660031901126100da5760209181906001600160a01b0361027f6106c7565b16815280845220549051908152f35b5050346100da57816003193601126100da576020905160128152f35b905082346104b95760603660031901126104b9576102c66106c7565b6102ce6106e2565b604435939092906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000818616828216146103cf575b50831680835260016020528683203384526020528683205491600019830361033b575b602088610107898989610730565b8683106103a357811561038c573315610375575082526001602090815286832033845281529186902090859003905582906101078761032d565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b8751636cb504a560e11b6020820190815260248083018a9052825267ffffffffffffffff929160608101848111828210176104a6578b5251869283929083905af1903d156104a0573d90811161048d57885190610436601f8201601f1916602001836106f8565b81528460203d92013e5b61044a578761030a565b865162461bcd60e51b8152602081840152601d60248201527f5265656e7472616e63792073686f756c642068617665206661696c65640000006044820152606490fd5b634e487b7160e01b855260418452602485fd5b50610440565b634e487b7160e01b885260418752602488fd5b80fd5b5050346100da57816003193601126100da576020906002549051908152f35b9050346105855781600319360112610585576104f56106c7565b60243590331561056e576001600160a01b031691821561055757508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b9291503461067a578360031936011261067a57600354600181811c9186908281168015610670575b602095868610821461065d575084885290811561063b57506001146105e2575b610176868661016c828b03836106f8565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061062857505050826101769461016c9282010194386105d1565b805486850188015292860192810161060b565b60ff191687860152505050151560051b830101925061016c82610176386105d1565b634e487b7160e01b845260229052602483fd5b93607f16936105b1565b8380fd5b6020808252825181830181905290939260005b8281106106b357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610691565b600435906001600160a01b03821682036106dd57565b600080fd5b602435906001600160a01b03821682036106dd57565b90601f8019910116810190811067ffffffffffffffff82111761071a57604052565b634e487b7160e01b600052604160045260246000fd5b916001600160a01b038084169283156107f557169283156107dc57600090838252816020526040822054908382106107aa575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea264697066735822122035c4a4969ecbe5b866f156c3b581a62a6372f0b25a768ec2171313ad2cc3031c64736f6c63430008180033";

type ReentrantTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrantTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrantToken__factory extends ContractFactory {
  constructor(...args: ReentrantTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fundraiser: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_fundraiser, overrides || {});
  }
  override deploy(
    _fundraiser: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_fundraiser, overrides || {}) as Promise<
      ReentrantToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReentrantToken__factory {
    return super.connect(runner) as ReentrantToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrantTokenInterface {
    return new Interface(_abi) as ReentrantTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReentrantToken {
    return new Contract(address, _abi, runner) as unknown as ReentrantToken;
  }
}
