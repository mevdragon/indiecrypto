/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockUniswapV2Router02,
  MockUniswapV2Router02Interface,
} from "../../../contracts/MockERC20.sol/MockUniswapV2Router02";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610249806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e8e3370014610030575b600080fd5b61004a60048036038101906100459190610117565b610062565b604051610059939291906101dc565b60405180910390f35b600080600088888a925092509250985098509895505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ae82610083565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000813590506100db816100b5565b92915050565b6000819050919050565b6100f4816100e1565b81146100ff57600080fd5b50565b600081359050610111816100eb565b92915050565b600080600080600080600080610100898b0312156101385761013761007e565b5b60006101468b828c016100cc565b98505060206101578b828c016100cc565b97505060406101688b828c01610102565b96505060606101798b828c01610102565b955050608061018a8b828c01610102565b94505060a061019b8b828c01610102565b93505060c06101ac8b828c016100cc565b92505060e06101bd8b828c01610102565b9150509295985092959890939650565b6101d6816100e1565b82525050565b60006060820190506101f160008301866101cd565b6101fe60208301856101cd565b61020b60408301846101cd565b94935050505056fea2646970667358221220cc4c28bf8bb66a7d0b4d3c332fdbba73759d3d357fdf0f022d5271e52752478c64736f6c63430008180033";

type MockUniswapV2Router02ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapV2Router02ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapV2Router02__factory extends ContractFactory {
  constructor(...args: MockUniswapV2Router02ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUniswapV2Router02 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockUniswapV2Router02__factory {
    return super.connect(runner) as MockUniswapV2Router02__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapV2Router02Interface {
    return new Interface(_abi) as MockUniswapV2Router02Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapV2Router02 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockUniswapV2Router02;
  }
}
