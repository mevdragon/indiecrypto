/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockUniswapV2Factory,
  MockUniswapV2FactoryInterface,
} from "../../../contracts/MockERC20.sol/MockUniswapV2Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c653961461003b578063e6a439051461006b575b600080fd5b61005560048036038101906100509190610118565b61009b565b6040516100629190610167565b60405180910390f35b61008560048036038101906100809190610118565b6100a8565b6040516100929190610167565b60405180910390f35b6000611234905092915050565b6000611234905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e5826100ba565b9050919050565b6100f5816100da565b811461010057600080fd5b50565b600081359050610112816100ec565b92915050565b6000806040838503121561012f5761012e6100b5565b5b600061013d85828601610103565b925050602061014e85828601610103565b9150509250929050565b610161816100da565b82525050565b600060208201905061017c6000830184610158565b9291505056fea26469706673582212209c41c48c7ae6760c789393da240d7226b197a2a32a400e73ef86fbe1982a20ce64736f6c63430008180033";

type MockUniswapV2FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapV2FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapV2Factory__factory extends ContractFactory {
  constructor(...args: MockUniswapV2FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUniswapV2Factory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockUniswapV2Factory__factory {
    return super.connect(runner) as MockUniswapV2Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapV2FactoryInterface {
    return new Interface(_abi) as MockUniswapV2FactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapV2Factory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockUniswapV2Factory;
  }
}
